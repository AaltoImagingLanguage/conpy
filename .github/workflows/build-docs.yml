name: build-docs

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  doc-build:
    runs-on: ubuntu-latest
    env:
      DISPLAY: ":99"
      OPENBLAS_NUM_THREADS: 4
      MNE_3D_BACKEND: pyvista
      _MNE_BRAIN_TRACES_AUTO: false

    steps:
      - uses: actions/checkout@v4
        
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Merge with upstream
        run: |
            echo $(git log -1 --pretty=%B) | tee gitlog.txt
            echo ${CI_PULL_REQUEST//*pull\//} | tee merge.txt
            if [[ $(cat merge.txt) != "" ]]; then
              echo "Merging $(cat merge.txt)";
              git remote add upstream git://github.com/AaltoImagingLanguage/conpy.git;
              git pull --ff-only upstream "refs/pull/$(cat merge.txt)/merge";
              git fetch upstream main;
            fi

      - name: Install 3D rendering libraries
        run: |
          sudo apt-get update
          sudo apt-get install libosmesa6 libglx-mesa0 libopengl0 libglx0 libdbus-1-3 

      - name: Spin up Xvfb
        run: |
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render -noreset;

      - name: Install PyQt6 dependencies
        run: |
          sudo apt-get install qt6-base-dev libx11-xcb-dev libxcb-cursor0

      - name: Cache Pip
        id: cache-pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-cache

      - name: Install Python dependencies
        run: |
          python -m pip install --user --upgrade --progress-bar off pip wheel
          python -m pip install --user --upgrade --progress-bar off -r requirements-dev.txt
          python -m pip install --user -e .

      # Look at what we have and fail early if there is some library conflict
      - name: Check installation
        run: |
          which python
          python -c "import mne; mne.sys_info()"
          python -c "import numpy; numpy.show_config()"
          python -c "import conpy"

      - name: Download example data
        run: |
          python -c "import mne; mne.datasets.sample.data_path(download=True)"

      # Build docs
      - name: make html
        run: |
          cd doc;
          make html;

      - name: Save HTML as artifact
        uses: actions/upload-artifact@v4
        with:
          name: doc-dev
          path: doc/_build/html
